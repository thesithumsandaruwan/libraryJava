/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication1;

import javax.swing.JOptionPane;
import javax.swing.JButton;
import javax.swing.JLabel;

/**
 *
 * @author Eranda sanjeewa
 */
public class SecondPage extends javax.swing.JFrame {

    /**
     * Creates new form SecondPage
     */
    public SecondPage() {
        try {
            initComponents();
        } catch (Exception e) {
            // If NetBeans form initialization fails, create a simple fallback UI
            System.err.println("Form initialization failed, creating fallback UI: " + e.getMessage());
            initSimpleComponents();
        }
        setupRoleBasedAccess();
    }
    
    /**
     * Fallback UI initialization when NetBeans form fails
     */
    private void initSimpleComponents() {
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library Management System");
        setSize(600, 400);
        setLocationRelativeTo(null);
        getContentPane().setLayout(null);
        
        // Create basic label
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36));
        jLabel1.setText("Library Management System");
        jLabel1.setBounds(50, 20, 500, 50);
        getContentPane().add(jLabel1);
    }
    
    /**
     * Setup UI based on current user's role
     */
    private void setupRoleBasedAccess() {
        UserDAO.User currentUser = SessionManager.getCurrentUser();
        
        if (currentUser == null) {
            // If no user logged in, redirect to login
            JOptionPane.showMessageDialog(this, 
                "Please log in to continue!", 
                "Authentication Required", 
                JOptionPane.WARNING_MESSAGE);
            FirstPage fp = new FirstPage();
            fp.setVisible(true);
            dispose();
            return;
        }
        
        // Set title based on role
        switch (currentUser.getUserRole()) {
            case ADMIN:
                setTitle("Library Management System - Admin Panel");
                // Admin has access to everything
                addAdminButtons();
                break;
            case LIBRARIAN:
                setTitle("Library Management System - Librarian Panel");
                // Librarian has access to books and members, but not librarian management
                addLibrarianButtons();
                break;
            case MEMBER:
                setTitle("Library Management System - Member Panel");
                // Members shouldn't reach this page, redirect to HomePage
                JOptionPane.showMessageDialog(this, 
                    "Members don't have access to this section!", 
                    "Access Denied", 
                    JOptionPane.WARNING_MESSAGE);
                HomePage hp = new HomePage();
                hp.setVisible(true);
                dispose();
                return;
        }
        
        // Add role indicator
        System.out.println("Logged in as: " + currentUser.getName() + " (" + currentUser.getUserRole() + ")");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null); // Use null layout instead of AbsoluteLayout

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton1.setText("Borrow Book");
        jButton1.setBounds(150, 70, 250, 50);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jButton2.setText("Return Book");
        jButton2.setBounds(150, 180, 251, 50);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication1/Images/New Background.jpg"))); // NOI18N
        jLabel1.setBounds(0, 0, 540, 400);
        getContentPane().add(jLabel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Borrow Book button - navigate to BorrowingManagement
        BorrowingManagement bm = new BorrowingManagement();
        bm.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Return Book button action - navigate to User Details
        User_Details ud = new User_Details();
        ud.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecondPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecondPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecondPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecondPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SecondPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    /**
     * Add additional navigation buttons for Admin users
     */
    private void addAdminButtons() {
        // Set a better window size for admin view
        setSize(900, 650);
        setLocationRelativeTo(null);
        
        // Create a welcome message
        JLabel welcomeLabel = new JLabel("Administrator Dashboard");
        welcomeLabel.setFont(new java.awt.Font("Segoe UI", 1, 32));
        welcomeLabel.setBounds(280, 30, 400, 50);
        getContentPane().add(welcomeLabel);
        
        // Create section for book management
        JLabel bookSectionLabel = new JLabel("Book Management");
        bookSectionLabel.setFont(new java.awt.Font("Segoe UI", 1, 20));
        bookSectionLabel.setBounds(100, 120, 200, 30);
        getContentPane().add(bookSectionLabel);
        
        // Add Book Details button
        JButton bookDetailsBtn = new JButton("Manage Books");
        bookDetailsBtn.setFont(new java.awt.Font("Segoe UI", 1, 18));
        bookDetailsBtn.setBounds(100, 160, 200, 60);
        bookDetailsBtn.addActionListener(e -> {
            Book_Details bd = new Book_Details();
            bd.setVisible(true);
            dispose();
        });
        getContentPane().add(bookDetailsBtn);
        
        // Create section for user management
        JLabel userSectionLabel = new JLabel("User Management");
        userSectionLabel.setFont(new java.awt.Font("Segoe UI", 1, 20));
        userSectionLabel.setBounds(350, 120, 200, 30);
        getContentPane().add(userSectionLabel);
        
        // Add User Details button
        JButton userDetailsBtn = new JButton("Manage Users");
        userDetailsBtn.setFont(new java.awt.Font("Segoe UI", 1, 18));
        userDetailsBtn.setBounds(350, 160, 200, 60);
        userDetailsBtn.addActionListener(e -> {
            User_Details ud = new User_Details();
            ud.setVisible(true);
            dispose();
        });
        getContentPane().add(userDetailsBtn);
        
        // Create section for system administration
        JLabel adminSectionLabel = new JLabel("System Administration");
        adminSectionLabel.setFont(new java.awt.Font("Segoe UI", 1, 20));
        adminSectionLabel.setBounds(600, 120, 250, 30);
        getContentPane().add(adminSectionLabel);
        
        // Add Admin Panel button
        JButton adminPanelBtn = new JButton("Admin Panel");
        adminPanelBtn.setFont(new java.awt.Font("Segoe UI", 1, 18));
        adminPanelBtn.setBounds(600, 160, 200, 60);
        adminPanelBtn.addActionListener(e -> {
            AdminPanel ap = new AdminPanel();
            ap.setVisible(true);
            dispose();
        });
        getContentPane().add(adminPanelBtn);
        
        // Create section for borrowing management
        JLabel borrowSectionLabel = new JLabel("Borrowing Management");
        borrowSectionLabel.setFont(new java.awt.Font("Segoe UI", 1, 20));
        borrowSectionLabel.setBounds(225, 250, 250, 30);
        getContentPane().add(borrowSectionLabel);
        
        // Add Borrowing Management button
        JButton borrowingBtn = new JButton("Manage Borrowing");
        borrowingBtn.setFont(new java.awt.Font("Segoe UI", 1, 18));
        borrowingBtn.setBounds(225, 290, 200, 60);
        borrowingBtn.addActionListener(e -> {
            BorrowingManagement bm = new BorrowingManagement();
            bm.setVisible(true);
            dispose();
        });
        getContentPane().add(borrowingBtn);
        
        // Add System Reports button
        JButton reportsBtn = new JButton("System Reports");
        reportsBtn.setFont(new java.awt.Font("Segoe UI", 1, 18));
        reportsBtn.setBounds(475, 290, 200, 60);
        reportsBtn.addActionListener(e -> {
            JOptionPane.showMessageDialog(this, 
                "System Reports feature coming soon!", 
                "Reports", 
                JOptionPane.INFORMATION_MESSAGE);
        });
        getContentPane().add(reportsBtn);
        
        // Add logout button in a better position
        JButton logoutBtn = new JButton("Logout");
        logoutBtn.setFont(new java.awt.Font("Segoe UI", 1, 16));
        logoutBtn.setBounds(750, 20, 100, 40);
        logoutBtn.addActionListener(e -> {
            SessionManager.logout();
            JOptionPane.showMessageDialog(this, "Logged out successfully!");
            FirstPage fp = new FirstPage();
            fp.setVisible(true);
            dispose();
        });
        getContentPane().add(logoutBtn);
        
        // Add a footer with user info
        UserDAO.User currentUser = SessionManager.getCurrentUser();
        if (currentUser != null) {
            JLabel userInfoLabel = new JLabel("Logged in as: " + currentUser.getName() + " (Administrator)");
            userInfoLabel.setFont(new java.awt.Font("Segoe UI", 0, 12));
            userInfoLabel.setBounds(50, 570, 400, 20);
            getContentPane().add(userInfoLabel);
        }
        
        // Refresh the layout
        revalidate();
        repaint();
    }

    /**
     * Add navigation buttons for Librarian users
     */
    private void addLibrarianButtons() {
        // Set a better window size for librarian view
        setSize(800, 600);
        setLocationRelativeTo(null);
        
        // Create a welcome message
        JLabel welcomeLabel = new JLabel("Librarian Dashboard");
        welcomeLabel.setFont(new java.awt.Font("Segoe UI", 1, 32));
        welcomeLabel.setBounds(250, 30, 300, 50);
        getContentPane().add(welcomeLabel);
        
        // Create section for book management
        JLabel bookSectionLabel = new JLabel("Book Management");
        bookSectionLabel.setFont(new java.awt.Font("Segoe UI", 1, 20));
        bookSectionLabel.setBounds(100, 120, 200, 30);
        getContentPane().add(bookSectionLabel);
        
        // Add Book Details button
        JButton bookDetailsBtn = new JButton("Manage Books");
        bookDetailsBtn.setFont(new java.awt.Font("Segoe UI", 1, 18));
        bookDetailsBtn.setBounds(100, 160, 200, 60);
        bookDetailsBtn.addActionListener(e -> {
            Book_Details bd = new Book_Details();
            bd.setVisible(true);
            dispose();
        });
        getContentPane().add(bookDetailsBtn);
        
        // Create section for user management
        JLabel userSectionLabel = new JLabel("User Management");
        userSectionLabel.setFont(new java.awt.Font("Segoe UI", 1, 20));
        userSectionLabel.setBounds(400, 120, 200, 30);
        getContentPane().add(userSectionLabel);
        
        // Add User Details button
        JButton userDetailsBtn = new JButton("Manage Users");
        userDetailsBtn.setFont(new java.awt.Font("Segoe UI", 1, 18));
        userDetailsBtn.setBounds(400, 160, 200, 60);
        userDetailsBtn.addActionListener(e -> {
            User_Details ud = new User_Details();
            ud.setVisible(true);
            dispose();
        });
        getContentPane().add(userDetailsBtn);
        
        // Create section for borrowing management
        JLabel borrowSectionLabel = new JLabel("Borrowing Management");
        borrowSectionLabel.setFont(new java.awt.Font("Segoe UI", 1, 20));
        borrowSectionLabel.setBounds(250, 250, 250, 30);
        getContentPane().add(borrowSectionLabel);
        
        // Add Borrowing Management button
        JButton borrowingBtn = new JButton("Manage Borrowing");
        borrowingBtn.setFont(new java.awt.Font("Segoe UI", 1, 18));
        borrowingBtn.setBounds(250, 290, 200, 60);
        borrowingBtn.addActionListener(e -> {
            BorrowingManagement bm = new BorrowingManagement();
            bm.setVisible(true);
            dispose();
        });
        getContentPane().add(borrowingBtn);
        
        // Add logout button in a better position
        JButton logoutBtn = new JButton("Logout");
        logoutBtn.setFont(new java.awt.Font("Segoe UI", 1, 16));
        logoutBtn.setBounds(650, 20, 100, 40);
        logoutBtn.addActionListener(e -> {
            SessionManager.logout();
            JOptionPane.showMessageDialog(this, "Logged out successfully!");
            FirstPage fp = new FirstPage();
            fp.setVisible(true);
            dispose();
        });
        getContentPane().add(logoutBtn);
        
        // Add a footer with user info
        UserDAO.User currentUser = SessionManager.getCurrentUser();
        if (currentUser != null) {
            JLabel userInfoLabel = new JLabel("Logged in as: " + currentUser.getName() + " (Librarian)");
            userInfoLabel.setFont(new java.awt.Font("Segoe UI", 0, 12));
            userInfoLabel.setBounds(50, 520, 300, 20);
            getContentPane().add(userInfoLabel);
        }
        
        // Refresh the layout
        revalidate();
        repaint();
    }
}
